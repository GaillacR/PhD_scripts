#!/usr/bin/env python
# -*- coding: utf-8 -*-

import math, sys
import numpy as np
import ReadWrite as rw
import PBC_RG as pbc


# Read the cell parameters in
cell_f = sys.argv[2]
[Cell, Cell.C] = rw.readCell(cell_f)

# Read the the positions in
trajPos = rw.readFromXYZFile(sys.argv[1] + ".xyz",int(sys.argv[3]),int(sys.argv[4]))

nconf = len(trajPos)
Natoms = len(trajPos[0])

angle = [0.0 for x in range(nconf)]

for t in range(nconf):
  angles = list()
  Ns = list()
  Zns = list()
  for i in range(Natoms):
    if (trajPos[t][i].elt=="N"):
      Ns.append(trajPos[t][i])
    elif (trajPos[t][i].elt=="Zn"):
      Zns.append(trajPos[t][i])
  for j in range(len(Zns)):
    Ns2 = Ns[:]
    try:
      N1 = pbc.NeiAtoms(Zns[j],Ns2,Cell,n=1,dmax=3)[1]
    except ValueError:
      continue
    Ns2 = Ns[:]
    for k in range(len(Ns2)):
      if (pbc.distance_cart(pbc.get_coord(N1),pbc.ClosestImage(pbc.get_coord(N1),pbc.get_coord(Ns2[k]),Cell),Cell)<0.1):
        Ns2.remove(Ns2[k])
        break
    try:
      N2 = pbc.NeiAtoms(Zns[j],Ns2,Cell,n=1,dmax=3)[1]
      angles.append(pbc.Angle(N1,Zns[j],N2,Cell))
    except ValueError:
      continue
  angle[t] = sum(angles)/float(len(angles))

with open(sys.argv[1].split("/")[-1]+".NZnN","w") as out:
  for t in range(nconf):
    out.write(str(t)+" "+str(angle[t])+"\n")


print "############################################################\n\n"
