#!/usr/bin/env python

import sys
import ReadWrite as rw
import numpy as np
from chemfiles import Trajectory, UnitCell, Atom, Topology


xyz = sys.argv[1]
cell_f = sys.argv[2]
fx = 1
fy = 1
fz = 1
if (len(sys.argv)>5):
  fx = int(sys.argv[3])
  fy = int(sys.argv[4])
  fz = int(sys.argv[5])

s = 1
if (len(sys.argv)<5 and len(sys.argv)>3):
  s = int(sys.argv[3])
elif (len(sys.argv)>6):
  s = int(sys.argv[6])

traj = Trajectory(xyz)
[Ax, Ay, Az, Bx, By, Bz, Cx, Cy, Cz] = rw.readFromColfile(cell_f,header=1,first=0)[2:11]
A2 = np.array([Ax,Ay,Az])
A = np.transpose(A2)
B2 = np.array([Bx,By,Bz])
B = np.transpose(B2)
C2 = np.array([Cx,Cy,Cz])
C = np.transpose(C2)

i=0
with Trajectory(xyz.split(".xyz")[0]+".pdb", "w") as output:
  for frame in traj:
    a = np.linalg.norm(A[i])
    b = np.linalg.norm(B[i])
    c = np.linalg.norm(C[i])
    gamma = np.arccos(np.dot(A[i],B[i])/(a*b))*180.0/np.pi
    beta = np.arccos(np.dot(A[i],C[i])/(a*c))*180.0/np.pi
    alpha = np.arccos(np.dot(B[i],C[i])/(b*c))*180.0/np.pi
    Cell = UnitCell(fx*a,fy*b,fz*c,alpha,beta,gamma)
    frame.set_cell(Cell)
    output.write(frame)
    i = i + s

traj.close()
