#!/usr/bin/env python
# -*- coding: utf-8 -*-

import math, sys
import numpy as np
import ReadWrite as rw
import PBC_RG as pbc


# Read the cell parameters in
cell_f = sys.argv[2]
[Cell, Cell.C] = rw.readCell(cell_f)

# Read the the positions in
trajPos = rw.readFromXYZFile(sys.argv[1] + ".xyz",int(sys.argv[3]),int(sys.argv[4]))

nconf = len(trajPos)
Natoms = len(trajPos[0])

angle = [0.0 for x in range(nconf)]

for t in range(nconf):
  angles = list()
  Zns = list()
  Ns = list()
  for i in range(Natoms):
    if (trajPos[t][i].elt=="Zn"):
      Zns.append(trajPos[t][i])
    elif (trajPos[t][i].elt=="N"):
      Ns.append(trajPos[t][i])
  for j in range(len(Ns)):
    Zns2 = Zns[:]
    try:
      Zn1 = pbc.NeiAtoms(Ns[j],Zns2,Cell,n=1,dmax=3.0)[1]
    except ValueError:
      continue
    Zns2 = Zns[:]
    for k in range(len(Zns2)):
      if (pbc.distance_cart(pbc.get_coord(Zn1),pbc.ClosestImage(pbc.get_coord(Zn1),pbc.get_coord(Zns2[k]),Cell),Cell)<0.1):
        Zns2.remove(Zns2[k])
        break
      try:
        Zn2 = pbc.NeiAtoms(Ns[j],Zns2,Cell,n=1,dmax=5)[1]
      except ValueError:
        continue
    angles.append(pbc.Angle(Zn1,Ns[j],Zn2,Cell))
  angle[t] = sum(angles)/float(len(angles))

with open(sys.argv[1].split("/")[-1]+".ZnNZn","w") as out:
  for t in range(nconf):
    out.write(str(t)+" "+str(angle[t])+"\n")


print "############################################################\n\n"
